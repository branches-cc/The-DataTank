<?php

/**
 * Executes the FilterByExpression filter
 * 
 * @package The-Datatank/universalfilter/interpreter/executers
 * @copyright (C) 2012 by iRail vzw/asbl
 * @license AGPLv3
 * @author Jeroen Penninck
 */
class FilterByExpressionExecuter extends UniversalFilterNodeExecuter {
    
    public function evaluateAsExpressionHeader(UniversalFilterNode $filter, Environment $topenv, IInterpreter $interpreter) {
        throw new Exception("A filterByExpression can not be evaluated.");
    }
    
    public function evaluateAsExpression(UniversalFilterNode $filter, Environment $topenv, IInterpreter $interpreter) {
        throw new Exception("A filterByExpression can not be evaluated.");
    }
    
    public function execute(UniversalFilterNode $filter, IInterpreter $interpreter) {
        //get source environment
        $executer = $interpreter->findExecuterFor($filter->getSource());
        $environment = $executer->execute($filter->getSource(), $interpreter);
        
        //the table generated by the last executer
        $sourcetable = $environment->getLastTable();
        
        // create a new environment to give each to the expression (once for each row)
        $newEnv=$environment->newModifiableEnvironment();
        
        //find the executer that can execute the root node
        $expr = $filter->getExpression();
        $exprexec = $interpreter->findExecuterFor($expr);
        
        //do it for each row, so create a new header which tells that
        $newHeader = $sourcetable->getHeader()->cloneHeader();
        $newHeader->setIsSingleRowByConstruction(true);
        
        
        $filteredRows = array();
        
        //loop all rows
        foreach($sourcetable->getContent()->getRows() as $row){
            // make a table with only this row
            $singleRowTable = new UniversalFilterTable($newHeader, new UniversalFilterTableContent(array($row)));
            $newEnv->replaceCurrentTable($singleRowTable);
            
            //request the header and content
            $header = $exprexec->evaluateAsExpressionHeader($expr, $newEnv, $interpreter);
            $anwser = $exprexec->evaluateAsExpression($expr, $newEnv, $interpreter);
            
            if(!$header->isSingleCellByConstruction()){
                throw new Exception("Not a valid expression to filter on. It returns more than one value!");
            }
            
            //if the expression evaluates to true, then add the row
            if($anwser->getCellValue($header->getColumnName())=="true"){
                array_push($filteredRows, $row);
            }
        }
        
        //the new table
        $newtable = new UniversalFilterTable($sourcetable->getHeader(), new UniversalFilterTableContent($filteredRows));
        
        //add it to the environment
        $environment->addTable($newtable);
        
        return $environment;
    }
}

?>
