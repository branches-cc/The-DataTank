<?php


/*

DON'T EDIT THIS FILE!

This file was automatically generated by the Lime parser generator.
The real source code you should be looking at is in one or more
grammar files in the Lime format.

THE ONLY REASON TO LOOK AT THIS FILE is to see where in the grammar
file that your error happened, because there are enough comments to
help you debug your grammar.

If you ignore this warning, you're shooting yourself in the brain,
not the foot.

*/

class spectql extends lime_parser {
var $qi = 0;
var $i = array (
  0 => 
  array (
    'flow' => 's 1',
    'expression' => 's 7',
    'resource' => 's 15',
    'calc' => 's 45',
    'resourceid' => 's 60',
    'name' => 's 78',
    'num' => 's 47',
    '\'(\'' => 's 57',
    'stmt' => 's 95',
    '\'start\'' => 'a \'start\'',
    '\'/\'' => 'r 13',
    '\'-\'' => 'r 13',
    '\'.\'' => 'r 15',
    '\'+\'' => 'r 15',
    '\'*\'' => 'r 15',
    '\':\'' => 'r 15',
    '#' => 'r 15',
  ),
  1 => 
  array (
    '\':\'' => 's 2',
    '#' => 'r 0',
  ),
  2 => 
  array (
    'format' => 's 3',
    'name' => 's 4',
    '\'-\'' => 'r 13',
    '#' => 'r 13',
  ),
  3 => 
  array (
    '#' => 'r 1',
  ),
  4 => 
  array (
    '\'-\'' => 's 5',
    '#' => 'r 43',
  ),
  5 => 
  array (
    'name' => 's 6',
    '\'-\'' => 'r 13',
    '\'(\'' => 'r 13',
    '\'~\'' => 'r 13',
    '\'<\'' => 'r 13',
    'EQ' => 'r 13',
    '\'>\'' => 'r 13',
    'ALIAS' => 'r 13',
    'LN' => 'r 13',
    '\'/\'' => 'r 13',
    '\'{\'' => 'r 13',
    '\'?\'' => 'r 13',
    '\'.\'' => 'r 13',
    '\':\'' => 'r 13',
    '\'+\'' => 'r 13',
    '\',\'' => 'r 13',
    '\'}\'' => 'r 13',
    '\')\'' => 'r 13',
    '#' => 'r 13',
  ),
  6 => 
  array (
    '\'-\'' => 'r 12',
    '\'(\'' => 'r 12',
    '\'~\'' => 'r 12',
    '\'<\'' => 'r 12',
    'EQ' => 'r 12',
    '\'>\'' => 'r 12',
    'ALIAS' => 'r 12',
    'LN' => 'r 12',
    '\'/\'' => 'r 12',
    '\'{\'' => 'r 12',
    '\'?\'' => 'r 12',
    '\'.\'' => 'r 12',
    '\':\'' => 'r 12',
    '\'+\'' => 'r 12',
    '\',\'' => 'r 12',
    '\'}\'' => 'r 12',
    '\')\'' => 'r 12',
    '#' => 'r 12',
  ),
  7 => 
  array (
    '\'.\'' => 's 8',
    '\':\'' => 'r 2',
    '#' => 'r 2',
  ),
  8 => 
  array (
    'name' => 's 9',
    '\'(\'' => 'r 13',
    '\'-\'' => 'r 13',
  ),
  9 => 
  array (
    '\'(\'' => 's 10',
    '\'-\'' => 's 5',
  ),
  10 => 
  array (
    'num' => 's 11',
    '\')\'' => 'r 15',
    '\'.\'' => 'r 15',
  ),
  11 => 
  array (
    '\')\'' => 's 12',
    '\'.\'' => 's 13',
  ),
  12 => 
  array (
    '\':\'' => 'r 3',
    '#' => 'r 3',
  ),
  13 => 
  array (
    'num' => 's 14',
    '\'.\'' => 'r 15',
    '\')\'' => 'r 15',
    '\',\'' => 'r 15',
    '\'/\'' => 'r 15',
    '\'{\'' => 'r 15',
    '\'?\'' => 'r 15',
    '\':\'' => 'r 15',
    '\'&\'' => 'r 15',
    '\'|\'' => 'r 15',
    '\'*\'' => 'r 15',
    '\'-\'' => 'r 15',
    '\'+\'' => 'r 15',
    '#' => 'r 15',
  ),
  14 => 
  array (
    '\'.\'' => 'r 14',
    '\')\'' => 'r 14',
    '\',\'' => 'r 14',
    '\'/\'' => 'r 14',
    '\'{\'' => 'r 14',
    '\'?\'' => 'r 14',
    '\':\'' => 'r 14',
    '\'&\'' => 'r 14',
    '\'|\'' => 'r 14',
    '\'*\'' => 'r 14',
    '\'-\'' => 'r 14',
    '\'+\'' => 'r 14',
    '#' => 'r 14',
  ),
  15 => 
  array (
    '\'?\'' => 's 16',
    '\'.\'' => 'r 5',
    '\':\'' => 'r 5',
    '#' => 'r 5',
  ),
  16 => 
  array (
    'filterlist' => 's 17',
    'name' => 's 19',
    'filter' => 's 38',
    '\'(\'' => 's 42',
    '\'-\'' => 'r 13',
    '\'~\'' => 'r 13',
    '\'<\'' => 'r 13',
    'EQ' => 'r 13',
    '\'>\'' => 'r 13',
  ),
  17 => 
  array (
    '\'&\'' => 's 18',
    '\'|\'' => 's 40',
    '\'.\'' => 'r 4',
    '\':\'' => 'r 4',
    '#' => 'r 4',
  ),
  18 => 
  array (
    'name' => 's 19',
    'filter' => 's 38',
    'filterlist' => 's 39',
    '\'(\'' => 's 42',
    '\'-\'' => 'r 13',
    '\'~\'' => 'r 13',
    '\'<\'' => 'r 13',
    'EQ' => 'r 13',
    '\'>\'' => 'r 13',
  ),
  19 => 
  array (
    '\'-\'' => 's 5',
    '\'>\'' => 's 20',
    'EQ' => 's 23',
    '\'<\'' => 's 26',
    '\'~\'' => 's 29',
    '\'(\'' => 's 31',
  ),
  20 => 
  array (
    'num' => 's 21',
    'string' => 's 22',
    '\'.\'' => 'r 15',
    '\'&\'' => 'r 15',
    '\'|\'' => 'r 15',
    '\':\'' => 'r 15',
    '\')\'' => 'r 15',
    '#' => 'r 15',
  ),
  21 => 
  array (
    '\'.\'' => 'r 23',
    '\'&\'' => 'r 23',
    '\'|\'' => 'r 23',
    '\':\'' => 'r 23',
    '\')\'' => 'r 23',
    '#' => 'r 23',
  ),
  22 => 
  array (
    '\'&\'' => 'r 20',
    '\'|\'' => 'r 20',
    '\'.\'' => 'r 20',
    '\':\'' => 'r 20',
    '\')\'' => 'r 20',
    '#' => 'r 20',
  ),
  23 => 
  array (
    'num' => 's 24',
    'string' => 's 25',
    '\'.\'' => 'r 15',
    '\'&\'' => 'r 15',
    '\'|\'' => 'r 15',
    '\':\'' => 'r 15',
    '\')\'' => 'r 15',
    '#' => 'r 15',
  ),
  24 => 
  array (
    '\'.\'' => 'r 24',
    '\'&\'' => 'r 24',
    '\'|\'' => 'r 24',
    '\':\'' => 'r 24',
    '\')\'' => 'r 24',
    '#' => 'r 24',
  ),
  25 => 
  array (
    '\'&\'' => 'r 21',
    '\'|\'' => 'r 21',
    '\'.\'' => 'r 21',
    '\':\'' => 'r 21',
    '\')\'' => 'r 21',
    '#' => 'r 21',
  ),
  26 => 
  array (
    'num' => 's 27',
    'string' => 's 28',
    '\'.\'' => 'r 15',
    '\'&\'' => 'r 15',
    '\'|\'' => 'r 15',
    '\':\'' => 'r 15',
    '\')\'' => 'r 15',
    '#' => 'r 15',
  ),
  27 => 
  array (
    '\'.\'' => 'r 25',
    '\'&\'' => 'r 25',
    '\'|\'' => 'r 25',
    '\':\'' => 'r 25',
    '\')\'' => 'r 25',
    '#' => 'r 25',
  ),
  28 => 
  array (
    '\'&\'' => 'r 22',
    '\'|\'' => 'r 22',
    '\'.\'' => 'r 22',
    '\':\'' => 'r 22',
    '\')\'' => 'r 22',
    '#' => 'r 22',
  ),
  29 => 
  array (
    'string' => 's 30',
  ),
  30 => 
  array (
    '\'&\'' => 'r 26',
    '\'|\'' => 'r 26',
    '\'.\'' => 'r 26',
    '\':\'' => 'r 26',
    '\')\'' => 'r 26',
    '#' => 'r 26',
  ),
  31 => 
  array (
    'num' => 's 32',
    '\',\'' => 'r 15',
    '\'.\'' => 'r 15',
  ),
  32 => 
  array (
    '\'.\'' => 's 13',
    '\',\'' => 's 33',
  ),
  33 => 
  array (
    'num' => 's 34',
    '\',\'' => 'r 15',
    '\'.\'' => 'r 15',
  ),
  34 => 
  array (
    '\'.\'' => 's 13',
    '\',\'' => 's 35',
  ),
  35 => 
  array (
    'num' => 's 36',
    '\')\'' => 'r 15',
    '\'.\'' => 'r 15',
  ),
  36 => 
  array (
    '\'.\'' => 's 13',
    '\')\'' => 's 37',
  ),
  37 => 
  array (
    '\'&\'' => 'r 27',
    '\'|\'' => 'r 27',
    '\'.\'' => 'r 27',
    '\':\'' => 'r 27',
    '\')\'' => 'r 27',
    '#' => 'r 27',
  ),
  38 => 
  array (
    '\'&\'' => 'r 16',
    '\'|\'' => 'r 16',
    '\'.\'' => 'r 16',
    '\':\'' => 'r 16',
    '\')\'' => 'r 16',
    '#' => 'r 16',
  ),
  39 => 
  array (
    '\'&\'' => 'r 17',
    '\'|\'' => 's 40',
    '\'.\'' => 'r 17',
    '\':\'' => 'r 17',
    '\')\'' => 'r 17',
    '#' => 'r 17',
  ),
  40 => 
  array (
    'name' => 's 19',
    'filter' => 's 38',
    'filterlist' => 's 41',
    '\'(\'' => 's 42',
    '\'-\'' => 'r 13',
    '\'~\'' => 'r 13',
    '\'<\'' => 'r 13',
    'EQ' => 'r 13',
    '\'>\'' => 'r 13',
  ),
  41 => 
  array (
    '\'&\'' => 'r 18',
    '\'|\'' => 'r 18',
    '\'.\'' => 'r 18',
    '\':\'' => 'r 18',
    '\')\'' => 'r 18',
    '#' => 'r 18',
  ),
  42 => 
  array (
    'name' => 's 19',
    'filter' => 's 38',
    'filterlist' => 's 43',
    '\'(\'' => 's 42',
    '\'-\'' => 'r 13',
    '\'~\'' => 'r 13',
    '\'<\'' => 'r 13',
    'EQ' => 'r 13',
    '\'>\'' => 'r 13',
  ),
  43 => 
  array (
    '\'&\'' => 's 18',
    '\'|\'' => 's 40',
    '\')\'' => 's 44',
  ),
  44 => 
  array (
    '\'|\'' => 'r 19',
    '\'&\'' => 'r 19',
    '\'.\'' => 'r 19',
    '\':\'' => 'r 19',
    '\')\'' => 'r 19',
    '#' => 'r 19',
  ),
  45 => 
  array (
    '\'+\'' => 's 46',
    '\'-\'' => 's 51',
    '\'*\'' => 's 53',
    '\'/\'' => 's 55',
    '\'.\'' => 'r 6',
    '\':\'' => 'r 6',
    '#' => 'r 6',
  ),
  46 => 
  array (
    'num' => 's 47',
    'calc' => 's 50',
    '\'(\'' => 's 57',
    '\'.\'' => 'r 15',
    '\'+\'' => 'r 15',
    '\'-\'' => 'r 15',
    '\'*\'' => 'r 15',
    '\'/\'' => 'r 15',
    '\':\'' => 'r 15',
    '\')\'' => 'r 15',
    '#' => 'r 15',
  ),
  47 => 
  array (
    '\'.\'' => 's 48',
    '\'+\'' => 'r 44',
    '\'-\'' => 'r 44',
    '\'*\'' => 'r 44',
    '\'/\'' => 'r 44',
    '\':\'' => 'r 44',
    '\')\'' => 'r 44',
    '#' => 'r 44',
  ),
  48 => 
  array (
    'num' => 's 49',
    '\'.\'' => 'r 15',
    '\'/\'' => 'r 15',
    '\'*\'' => 'r 15',
    '\'-\'' => 'r 15',
    '\'+\'' => 'r 15',
    '\':\'' => 'r 15',
    '\')\'' => 'r 15',
    '#' => 'r 15',
  ),
  49 => 
  array (
    '\'.\'' => 'r 14',
    '\'+\'' => 'r 14',
    '\'-\'' => 'r 14',
    '\'*\'' => 'r 14',
    '\'/\'' => 'r 14',
    '\':\'' => 'r 14',
    '\')\'' => 'r 14',
    '#' => 'r 14',
  ),
  50 => 
  array (
    '\'+\'' => 'r 45',
    '\'-\'' => 'r 45',
    '\'*\'' => 's 53',
    '\'/\'' => 's 55',
    '\'.\'' => 'r 45',
    '\':\'' => 'r 45',
    '\')\'' => 'r 45',
    '#' => 'r 45',
  ),
  51 => 
  array (
    'num' => 's 47',
    'calc' => 's 52',
    '\'(\'' => 's 57',
    '\'.\'' => 'r 15',
    '\'+\'' => 'r 15',
    '\'-\'' => 'r 15',
    '\'*\'' => 'r 15',
    '\'/\'' => 'r 15',
    '\':\'' => 'r 15',
    '\')\'' => 'r 15',
    '#' => 'r 15',
  ),
  52 => 
  array (
    '\'+\'' => 'r 46',
    '\'-\'' => 'r 46',
    '\'*\'' => 's 53',
    '\'/\'' => 's 55',
    '\'.\'' => 'r 46',
    '\':\'' => 'r 46',
    '\')\'' => 'r 46',
    '#' => 'r 46',
  ),
  53 => 
  array (
    'num' => 's 47',
    'calc' => 's 54',
    '\'(\'' => 's 57',
    '\'.\'' => 'r 15',
    '\'+\'' => 'r 15',
    '\'-\'' => 'r 15',
    '\'*\'' => 'r 15',
    '\'/\'' => 'r 15',
    '\':\'' => 'r 15',
    '\')\'' => 'r 15',
    '#' => 'r 15',
  ),
  54 => 
  array (
    '\'+\'' => 'r 47',
    '\'-\'' => 'r 47',
    '\'*\'' => 'r 47',
    '\'/\'' => 'r 47',
    '\'.\'' => 'r 47',
    '\':\'' => 'r 47',
    '\')\'' => 'r 47',
    '#' => 'r 47',
  ),
  55 => 
  array (
    'num' => 's 47',
    'calc' => 's 56',
    '\'(\'' => 's 57',
    '\'.\'' => 'r 15',
    '\'+\'' => 'r 15',
    '\'-\'' => 'r 15',
    '\'*\'' => 'r 15',
    '\'/\'' => 'r 15',
    '\':\'' => 'r 15',
    '\')\'' => 'r 15',
    '#' => 'r 15',
  ),
  56 => 
  array (
    '\'+\'' => 'r 48',
    '\'-\'' => 'r 48',
    '\'*\'' => 'r 48',
    '\'/\'' => 'r 48',
    '\'.\'' => 'r 48',
    '\':\'' => 'r 48',
    '\')\'' => 'r 48',
    '#' => 'r 48',
  ),
  57 => 
  array (
    'num' => 's 47',
    'calc' => 's 58',
    '\'(\'' => 's 57',
    '\'.\'' => 'r 15',
    '\'+\'' => 'r 15',
    '\'-\'' => 'r 15',
    '\'*\'' => 'r 15',
    '\'/\'' => 'r 15',
    '\')\'' => 'r 15',
  ),
  58 => 
  array (
    '\'+\'' => 's 46',
    '\'-\'' => 's 51',
    '\'*\'' => 's 53',
    '\'/\'' => 's 55',
    '\')\'' => 's 59',
  ),
  59 => 
  array (
    '\'/\'' => 'r 50',
    '\'*\'' => 'r 50',
    '\'-\'' => 'r 50',
    '\'+\'' => 'r 50',
    '\'.\'' => 'r 50',
    '\':\'' => 'r 50',
    '\')\'' => 'r 50',
    '#' => 'r 50',
  ),
  60 => 
  array (
    '\'{\'' => 's 61',
    '\'/\'' => 's 82',
    '\'?\'' => 'r 8',
    '\'.\'' => 'r 8',
    '\':\'' => 'r 8',
    '#' => 'r 8',
  ),
  61 => 
  array (
    'selector' => 's 62',
    'name' => 's 65',
    'selectargument' => 's 94',
    'argument' => 's 92',
    'link' => 's 74',
    '\'*\'' => 's 75',
    'function' => 's 76',
    'ALIAS' => 'r 13',
    '\'-\'' => 'r 13',
    '\'(\'' => 'r 13',
    'LN' => 'r 13',
    '\'+\'' => 'r 13',
    '\',\'' => 'r 13',
    '\'}\'' => 'r 13',
  ),
  62 => 
  array (
    '\'}\'' => 's 63',
    '\',\'' => 's 64',
  ),
  63 => 
  array (
    '\'?\'' => 'r 7',
    '\'.\'' => 'r 7',
    '\':\'' => 'r 7',
    '#' => 'r 7',
  ),
  64 => 
  array (
    'name' => 's 65',
    'selectargument' => 's 91',
    'argument' => 's 92',
    'link' => 's 74',
    '\'*\'' => 's 75',
    'function' => 's 76',
    'ALIAS' => 'r 13',
    '\'-\'' => 'r 13',
    '\'(\'' => 'r 13',
    'LN' => 'r 13',
    '\'+\'' => 'r 13',
    '\'}\'' => 'r 13',
    '\',\'' => 'r 13',
  ),
  65 => 
  array (
    '\'-\'' => 's 5',
    'ALIAS' => 's 66',
    '\'(\'' => 's 68',
    'LN' => 's 77',
    '\'+\'' => 'r 38',
    '\',\'' => 'r 38',
    '\'}\'' => 'r 38',
  ),
  66 => 
  array (
    'name' => 's 67',
    'argument' => 's 87',
    'link' => 's 74',
    '\'*\'' => 's 75',
    'function' => 's 76',
    '\'(\'' => 'r 13',
    '\'-\'' => 'r 13',
    'LN' => 'r 13',
    '\'+\'' => 'r 13',
    '\',\'' => 'r 13',
    '\'}\'' => 'r 13',
  ),
  67 => 
  array (
    '\'-\'' => 's 5',
    '\'(\'' => 's 68',
    'LN' => 's 77',
    '\'+\'' => 'r 38',
    '\',\'' => 'r 38',
    '\'}\'' => 'r 38',
    '\')\'' => 'r 38',
  ),
  68 => 
  array (
    'name' => 's 67',
    'argument' => 's 69',
    'link' => 's 74',
    '\'*\'' => 's 75',
    'function' => 's 76',
    '\'(\'' => 'r 13',
    '\'-\'' => 'r 13',
    'LN' => 'r 13',
    '\',\'' => 'r 13',
    '\')\'' => 'r 13',
  ),
  69 => 
  array (
    '\')\'' => 's 70',
    '\',\'' => 's 71',
  ),
  70 => 
  array (
    '\'+\'' => 'r 34',
    '\'-\'' => 'r 34',
    '\',\'' => 'r 34',
    '\'}\'' => 'r 34',
    '\')\'' => 'r 34',
  ),
  71 => 
  array (
    'name' => 's 67',
    'argument' => 's 72',
    'link' => 's 74',
    '\'*\'' => 's 75',
    'function' => 's 76',
    '\'(\'' => 'r 13',
    '\'-\'' => 'r 13',
    'LN' => 'r 13',
    '\')\'' => 'r 13',
  ),
  72 => 
  array (
    '\')\'' => 's 73',
  ),
  73 => 
  array (
    '\'+\'' => 'r 35',
    '\'-\'' => 'r 35',
    '\',\'' => 'r 35',
    '\'}\'' => 'r 35',
    '\')\'' => 'r 35',
  ),
  74 => 
  array (
    '\'+\'' => 'r 39',
    '\'-\'' => 'r 39',
    '\',\'' => 'r 39',
    '\'}\'' => 'r 39',
    '\')\'' => 'r 39',
  ),
  75 => 
  array (
    '\'+\'' => 'r 40',
    '\'-\'' => 'r 40',
    '\',\'' => 'r 40',
    '\'}\'' => 'r 40',
    '\')\'' => 'r 40',
  ),
  76 => 
  array (
    '\'+\'' => 'r 41',
    '\'-\'' => 'r 41',
    '\',\'' => 'r 41',
    '\'}\'' => 'r 41',
    '\')\'' => 'r 41',
  ),
  77 => 
  array (
    'name' => 's 78',
    'resourceid' => 's 81',
    '\'/\'' => 'r 13',
    '\'-\'' => 'r 13',
  ),
  78 => 
  array (
    '\'/\'' => 's 79',
    '\'-\'' => 's 5',
  ),
  79 => 
  array (
    'name' => 's 80',
    '\'-\'' => 'r 13',
    '\'/\'' => 'r 13',
    '\'{\'' => 'r 13',
    '\'?\'' => 'r 13',
    '\'.\'' => 'r 13',
    '\':\'' => 'r 13',
    '#' => 'r 13',
  ),
  80 => 
  array (
    '\'-\'' => 's 5',
    '\'/\'' => 'r 9',
    '\'{\'' => 'r 9',
    '\'?\'' => 'r 9',
    '\'.\'' => 'r 9',
    '\':\'' => 'r 9',
    '#' => 'r 9',
  ),
  81 => 
  array (
    '\'/\'' => 's 82',
    '\'.\'' => 's 85',
  ),
  82 => 
  array (
    'name' => 's 83',
    'num' => 's 84',
    '\'-\'' => 'r 13',
    '\'/\'' => 'r 13',
    '\'{\'' => 'r 13',
    '\'?\'' => 'r 13',
    '\'.\'' => 'r 13',
    '\':\'' => 'r 13',
    '#' => 'r 13',
  ),
  83 => 
  array (
    '\'-\'' => 's 5',
    '\'/\'' => 'r 10',
    '\'{\'' => 'r 10',
    '\'?\'' => 'r 10',
    '\'.\'' => 'r 10',
    '\':\'' => 'r 10',
    '#' => 'r 10',
  ),
  84 => 
  array (
    '\'.\'' => 'r 11',
    '\'/\'' => 'r 11',
    '\'{\'' => 'r 11',
    '\'?\'' => 'r 11',
    '\':\'' => 'r 11',
    '#' => 'r 11',
  ),
  85 => 
  array (
    'name' => 's 86',
    '\'-\'' => 'r 13',
    '\'+\'' => 'r 13',
    '\',\'' => 'r 13',
    '\'}\'' => 'r 13',
    '\')\'' => 'r 13',
  ),
  86 => 
  array (
    '\'-\'' => 's 5',
    '\'+\'' => 'r 42',
    '\',\'' => 'r 42',
    '\'}\'' => 'r 42',
    '\')\'' => 'r 42',
  ),
  87 => 
  array (
    'order' => 's 88',
    '\'+\'' => 's 89',
    '\'-\'' => 's 90',
    '\',\'' => 'r 32',
    '\'}\'' => 'r 32',
  ),
  88 => 
  array (
    '\',\'' => 'r 33',
    '\'}\'' => 'r 33',
  ),
  89 => 
  array (
    '\',\'' => 'r 36',
    '\'}\'' => 'r 36',
  ),
  90 => 
  array (
    '\',\'' => 'r 37',
    '\'}\'' => 'r 37',
  ),
  91 => 
  array (
    '\'}\'' => 'r 29',
    '\',\'' => 'r 29',
  ),
  92 => 
  array (
    'order' => 's 93',
    '\'+\'' => 's 89',
    '\'-\'' => 's 90',
    '\',\'' => 'r 30',
    '\'}\'' => 'r 30',
  ),
  93 => 
  array (
    '\',\'' => 'r 31',
    '\'}\'' => 'r 31',
  ),
  94 => 
  array (
    '\',\'' => 'r 28',
    '\'}\'' => 'r 28',
  ),
  95 => 
  array (
    '#' => 'r 51',
  ),
);
function reduce_0_stmt_1($tokens, &$result) {
#
# (0) stmt :=  flow
#
$result = reset($tokens);

}

function reduce_1_stmt_2($tokens, &$result) {
#
# (1) stmt :=  flow  ':'  format
#
$result = reset($tokens);

}

function reduce_2_flow_1($tokens, &$result) {
#
# (2) flow :=  expression
#
$result = reset($tokens);

}

function reduce_3_flow_2($tokens, &$result) {
#
# (3) flow :=  expression  '.'  name  '('  num  ')'
#
$result = reset($tokens);
$e =& $tokens[0];
$function =& $tokens[2];
$n1 =& $tokens[4];
 if($function == "limit"){ /* TODO */ $result = null;}else{ $result = createAggregatorFilter($function,$n1);/* TODO create function php file to map constants*/  } 
}

function reduce_4_expression_1($tokens, &$result) {
#
# (4) expression :=  resource  '?'  filterlist
#
$result = reset($tokens);
 $result = new FilterByExpressionFilter($tokens[2]); $result->setSource($tokens[0]); 
}

function reduce_5_expression_2($tokens, &$result) {
#
# (5) expression :=  resource
#
$result = reset($tokens);

}

function reduce_6_expression_3($tokens, &$result) {
#
# (6) expression :=  calc
#
$result = reset($tokens);
 /* TODO execute calculation */ $result = $tokens[0]->execute(); 
}

function reduce_7_resource_1($tokens, &$result) {
#
# (7) resource :=  resourceid  '{'  selector  '}'
#
$result = reset($tokens);
$sel =& $tokens[2];
 $columns = new ColumnSelectionFilter($sel["filters"]); $columns->setSource(new Identifier($tokens[0])); /* $sorts = new SORTOBJECT(); $sort->setSource($columns); $result = $sorts;*/ $result = $columns; 
}

function reduce_8_resource_2($tokens, &$result) {
#
# (8) resource :=  resourceid
#
$result = reset($tokens);
 $result = new Identifier($tokens[0]); 
}

function reduce_9_resourceid_1($tokens, &$result) {
#
# (9) resourceid :=  name  '/'  name
#
$result = reset($tokens);
 $result = $tokens[0] . "." . $tokens[2]; 
}

function reduce_10_resourceid_2($tokens, &$result) {
#
# (10) resourceid :=  resourceid  '/'  name
#
$result = reset($tokens);
 $result = $tokens[0] . "." . $tokens[2]; 
}

function reduce_11_resourceid_3($tokens, &$result) {
#
# (11) resourceid :=  resourceid  '/'  num
#
$result = reset($tokens);
 /* TODO */ 
}

function reduce_12_name_1($tokens, &$result) {
#
# (12) name :=  name  '-'  name
#
$result = reset($tokens);
 $result = $tokens[0] . "-" . $tokens[2]; 
}

function reduce_13_name_2($tokens, &$result) {
#
# (13) name :=
#
$result = reset($tokens);

}

function reduce_14_num_1($tokens, &$result) {
#
# (14) num :=  num  '.'  num
#
$result = reset($tokens);
 $result = new Constant((double) ($tokens[0] . "." . $tokens[2]));  
}

function reduce_15_num_2($tokens, &$result) {
#
# (15) num :=
#
$result = reset($tokens);

}

function reduce_16_filterlist_1($tokens, &$result) {
#
# (16) filterlist :=  filter
#
$result = reset($tokens);
 $result = $tokens[0]; 
}

function reduce_17_filterlist_2($tokens, &$result) {
#
# (17) filterlist :=  filterlist  '&'  filterlist
#
$result = reset($tokens);
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_AND,$tokens[0],$tokens[2]); 
}

function reduce_18_filterlist_3($tokens, &$result) {
#
# (18) filterlist :=  filterlist  '|'  filterlist
#
$result = reset($tokens);
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_OR,$tokens[0],$tokens[2]); 
}

function reduce_19_filterlist_4($tokens, &$result) {
#
# (19) filterlist :=  '('  filterlist  ')'
#
$result = reset($tokens);
$list =& $tokens[1];
 $result = $list;
}

function reduce_20_filter_1($tokens, &$result) {
#
# (20) filter :=  name  '>'  string
#
$result = reset($tokens);
$a =& $tokens[0];
$b =& $tokens[2];
 $result =  new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_COMPARE_SMALLER_THAN, new Identifier($a),new Constant($b)); 
}

function reduce_21_filter_2($tokens, &$result) {
#
# (21) filter :=  name  EQ  string
#
$result = reset($tokens);
$a =& $tokens[0];
$b =& $tokens[2];
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_COMPARE_EQUAL,new Identifier($a),new Constant($b)); 
}

function reduce_22_filter_3($tokens, &$result) {
#
# (22) filter :=  name  '<'  string
#
$result = reset($tokens);
$a =& $tokens[0];
$b =& $tokens[2];
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_COMPARE_SMALLER_THAN, new Identifier($a),new Constant($b)); 
}

function reduce_23_filter_4($tokens, &$result) {
#
# (23) filter :=  name  '>'  num
#
$result = reset($tokens);
$a =& $tokens[0];
$b =& $tokens[2];
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_COMPARE_LARGER_THAN, new Identifier($a),new Constant($b)); 
}

function reduce_24_filter_5($tokens, &$result) {
#
# (24) filter :=  name  EQ  num
#
$result = reset($tokens);
$a =& $tokens[0];
$b =& $tokens[2];
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_COMPARE_EQUAL,new Identifier($a),new Constant($b)); 
}

function reduce_25_filter_6($tokens, &$result) {
#
# (25) filter :=  name  '<'  num
#
$result = reset($tokens);
$a =& $tokens[0];
$b =& $tokens[2];
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_COMPARE_SMALLER_THAN, new Identifier($a),new Constant($b)); 
}

function reduce_26_filter_7($tokens, &$result) {
#
# (26) filter :=  name  '~'  string
#
$result = reset($tokens);
$a =& $tokens[0];
$b =& $tokens[2];
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_MATCH_REGEX, new Identifier($a),new Constant("/.*".preg_quote($b).".*/")); 
}

function reduce_27_filter_8($tokens, &$result) {
#
# (27) filter :=  name  '('  num  ','  num  ','  num  ')'
#
$result = reset($tokens);
$function =& $tokens[0];
$lat =& $tokens[2];
$long =& $tokens[4];
$radius =& $tokens[6];
 /* TODO in radius function (tertiary function)*/ 
}

function reduce_28_selector_1($tokens, &$result) {
#
# (28) selector :=  selectargument
#
$result = reset($tokens);
$arg =& $tokens[0];
 $result = $tokens[0]; 
}

function reduce_29_selector_2($tokens, &$result) {
#
# (29) selector :=  selector  ','  selectargument
#
$result = reset($tokens);
$arg =& $tokens[2];
 $filters = array_merge($tokens[0]["filters"],$tokens[2]["filters"]); 
                                    $sorts = array_merge($tokens[0]["sorts"],$tokens[2]["sorts"]);
                                    $result = array("filters"=>$filters,"sorts"=>$sorts); 
}

function reduce_30_selectargument_1($tokens, &$result) {
#
# (30) selectargument :=  argument
#
$result = reset($tokens);
$arg =& $tokens[0];
 $result = array("filters" => array(new ColumnSelectionFilterColumn($arg,null)), "sorts" => array()); 
}

function reduce_31_selectargument_2($tokens, &$result) {
#
# (31) selectargument :=  argument  order
#
$result = reset($tokens);
$arg =& $tokens[0];
 $result = array( "filters" => array(new ColumnSelectionFilterColumn($arg,null)), "sorts" => array()); /* eens sort by functions bestaan, $result = array() van twee arrays van argument, en een array van alle argumenten waarop moet gesorteerd worden */ 
}

function reduce_32_selectargument_3($tokens, &$result) {
#
# (32) selectargument :=  name  ALIAS  argument
#
$result = reset($tokens);
$arg =& $tokens[2];
$result = array("filters" => array(new ColumnSelectionFilterColumn($arg,$tokens[0])), "sorts" => array());
}

function reduce_33_selectargument_4($tokens, &$result) {
#
# (33) selectargument :=  name  ALIAS  argument  order
#
$result = reset($tokens);
$arg =& $tokens[2];
$result = array("filters" => array(new ColumnSelectionFilterColumn($arg,$tokens[0])), "sorts" => array());
}

function reduce_34_function_1($tokens, &$result) {
#
# (34) function :=  name  '('  argument  ')'
#
$result = reset($tokens);
 $result = createUnaryFunction($tokens[0],$tokens[2]); 
}

function reduce_35_function_2($tokens, &$result) {
#
# (35) function :=  name  '('  argument  ','  argument  ')'
#
$result = reset($tokens);
 $result = createBinaryFunction($tokens[0],$tokens[2],$tokens[4]); 
}

function reduce_36_order_1($tokens, &$result) {
#
# (36) order :=  '+'
#
$result = reset($tokens);
 /* SORT BY ascending */ $result = 1; 
}

function reduce_37_order_2($tokens, &$result) {
#
# (37) order :=  '-'
#
$result = reset($tokens);
 /* SORT BY descending  */ $result = -1; 
}

function reduce_38_argument_1($tokens, &$result) {
#
# (38) argument :=  name
#
$result = reset($tokens);
$name =& $tokens[0];
 $result = new Identifier($name); 
}

function reduce_39_argument_2($tokens, &$result) {
#
# (39) argument :=  link
#
$result = reset($tokens);

}

function reduce_40_argument_3($tokens, &$result) {
#
# (40) argument :=  '*'
#
$result = reset($tokens);
 $result = new Identifier('*'); 
}

function reduce_41_argument_4($tokens, &$result) {
#
# (41) argument :=  function
#
$result = reset($tokens);
 $result = $tokens[0];
}

function reduce_42_link_1($tokens, &$result) {
#
# (42) link :=  name  LN  resourceid  '.'  name
#
$result = reset($tokens);
 /* joined resource */ 
}

function reduce_43_format_1($tokens, &$result) {
#
# (43) format :=  name
#
$result = reset($tokens);
 /* do nothing, format isnt used in the AST for it is an abstract filter tree , format is not a filter.*/ 
}

function reduce_44_calc_1($tokens, &$result) {
#
# (44) calc :=  num
#
$result = reset($tokens);
 $result = new Constant($tokens[0]); 
}

function reduce_45_calc_2($tokens, &$result) {
#
# (45) calc :=  calc  '+'  calc
#
$result = reset($tokens);
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_PLUS, $tokens[0], $tokens[2]);  
}

function reduce_46_calc_3($tokens, &$result) {
#
# (46) calc :=  calc  '-'  calc
#
$result = reset($tokens);
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_MINUS, $tokens[0], $tokens[2]); 
}

function reduce_47_calc_4($tokens, &$result) {
#
# (47) calc :=  calc  '*'  calc
#
$result = reset($tokens);
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_MULTIPLY, $tokens[0], $tokens[2]); 
}

function reduce_48_calc_5($tokens, &$result) {
#
# (48) calc :=  calc  '/'  calc
#
$result = reset($tokens);
 $result = new BinaryFunction(BinaryFunction::$FUNCTION_BINARY_DIVIDE, $tokens[0], $tokens[2]); 
}

function reduce_49_calc_6($tokens, &$result) {
#
# (49) calc :=  num  '.'  num
#
$result = reset($tokens);
 $result = new Constant((double)($tokens[0] . "." . $tokens[2])); 
}

function reduce_50_calc_7($tokens, &$result) {
#
# (50) calc :=  '('  calc  ')'
#
$result = reset($tokens);
$result = $tokens[0];
}

function reduce_51_start_1($tokens, &$result) {
#
# (51) 'start' :=  stmt
#
$result = reset($tokens);

}

var $method = array (
  0 => 'reduce_0_stmt_1',
  1 => 'reduce_1_stmt_2',
  2 => 'reduce_2_flow_1',
  3 => 'reduce_3_flow_2',
  4 => 'reduce_4_expression_1',
  5 => 'reduce_5_expression_2',
  6 => 'reduce_6_expression_3',
  7 => 'reduce_7_resource_1',
  8 => 'reduce_8_resource_2',
  9 => 'reduce_9_resourceid_1',
  10 => 'reduce_10_resourceid_2',
  11 => 'reduce_11_resourceid_3',
  12 => 'reduce_12_name_1',
  13 => 'reduce_13_name_2',
  14 => 'reduce_14_num_1',
  15 => 'reduce_15_num_2',
  16 => 'reduce_16_filterlist_1',
  17 => 'reduce_17_filterlist_2',
  18 => 'reduce_18_filterlist_3',
  19 => 'reduce_19_filterlist_4',
  20 => 'reduce_20_filter_1',
  21 => 'reduce_21_filter_2',
  22 => 'reduce_22_filter_3',
  23 => 'reduce_23_filter_4',
  24 => 'reduce_24_filter_5',
  25 => 'reduce_25_filter_6',
  26 => 'reduce_26_filter_7',
  27 => 'reduce_27_filter_8',
  28 => 'reduce_28_selector_1',
  29 => 'reduce_29_selector_2',
  30 => 'reduce_30_selectargument_1',
  31 => 'reduce_31_selectargument_2',
  32 => 'reduce_32_selectargument_3',
  33 => 'reduce_33_selectargument_4',
  34 => 'reduce_34_function_1',
  35 => 'reduce_35_function_2',
  36 => 'reduce_36_order_1',
  37 => 'reduce_37_order_2',
  38 => 'reduce_38_argument_1',
  39 => 'reduce_39_argument_2',
  40 => 'reduce_40_argument_3',
  41 => 'reduce_41_argument_4',
  42 => 'reduce_42_link_1',
  43 => 'reduce_43_format_1',
  44 => 'reduce_44_calc_1',
  45 => 'reduce_45_calc_2',
  46 => 'reduce_46_calc_3',
  47 => 'reduce_47_calc_4',
  48 => 'reduce_48_calc_5',
  49 => 'reduce_49_calc_6',
  50 => 'reduce_50_calc_7',
  51 => 'reduce_51_start_1',
);
var $a = array (
  0 => 
  array (
    'symbol' => 'stmt',
    'len' => 1,
    'replace' => true,
  ),
  1 => 
  array (
    'symbol' => 'stmt',
    'len' => 3,
    'replace' => true,
  ),
  2 => 
  array (
    'symbol' => 'flow',
    'len' => 1,
    'replace' => true,
  ),
  3 => 
  array (
    'symbol' => 'flow',
    'len' => 6,
    'replace' => true,
  ),
  4 => 
  array (
    'symbol' => 'expression',
    'len' => 3,
    'replace' => true,
  ),
  5 => 
  array (
    'symbol' => 'expression',
    'len' => 1,
    'replace' => true,
  ),
  6 => 
  array (
    'symbol' => 'expression',
    'len' => 1,
    'replace' => true,
  ),
  7 => 
  array (
    'symbol' => 'resource',
    'len' => 4,
    'replace' => true,
  ),
  8 => 
  array (
    'symbol' => 'resource',
    'len' => 1,
    'replace' => true,
  ),
  9 => 
  array (
    'symbol' => 'resourceid',
    'len' => 3,
    'replace' => true,
  ),
  10 => 
  array (
    'symbol' => 'resourceid',
    'len' => 3,
    'replace' => true,
  ),
  11 => 
  array (
    'symbol' => 'resourceid',
    'len' => 3,
    'replace' => true,
  ),
  12 => 
  array (
    'symbol' => 'name',
    'len' => 3,
    'replace' => true,
  ),
  13 => 
  array (
    'symbol' => 'name',
    'len' => 0,
    'replace' => true,
  ),
  14 => 
  array (
    'symbol' => 'num',
    'len' => 3,
    'replace' => true,
  ),
  15 => 
  array (
    'symbol' => 'num',
    'len' => 0,
    'replace' => true,
  ),
  16 => 
  array (
    'symbol' => 'filterlist',
    'len' => 1,
    'replace' => true,
  ),
  17 => 
  array (
    'symbol' => 'filterlist',
    'len' => 3,
    'replace' => true,
  ),
  18 => 
  array (
    'symbol' => 'filterlist',
    'len' => 3,
    'replace' => true,
  ),
  19 => 
  array (
    'symbol' => 'filterlist',
    'len' => 3,
    'replace' => true,
  ),
  20 => 
  array (
    'symbol' => 'filter',
    'len' => 3,
    'replace' => true,
  ),
  21 => 
  array (
    'symbol' => 'filter',
    'len' => 3,
    'replace' => true,
  ),
  22 => 
  array (
    'symbol' => 'filter',
    'len' => 3,
    'replace' => true,
  ),
  23 => 
  array (
    'symbol' => 'filter',
    'len' => 3,
    'replace' => true,
  ),
  24 => 
  array (
    'symbol' => 'filter',
    'len' => 3,
    'replace' => true,
  ),
  25 => 
  array (
    'symbol' => 'filter',
    'len' => 3,
    'replace' => true,
  ),
  26 => 
  array (
    'symbol' => 'filter',
    'len' => 3,
    'replace' => true,
  ),
  27 => 
  array (
    'symbol' => 'filter',
    'len' => 8,
    'replace' => true,
  ),
  28 => 
  array (
    'symbol' => 'selector',
    'len' => 1,
    'replace' => true,
  ),
  29 => 
  array (
    'symbol' => 'selector',
    'len' => 3,
    'replace' => true,
  ),
  30 => 
  array (
    'symbol' => 'selectargument',
    'len' => 1,
    'replace' => true,
  ),
  31 => 
  array (
    'symbol' => 'selectargument',
    'len' => 2,
    'replace' => true,
  ),
  32 => 
  array (
    'symbol' => 'selectargument',
    'len' => 3,
    'replace' => true,
  ),
  33 => 
  array (
    'symbol' => 'selectargument',
    'len' => 4,
    'replace' => true,
  ),
  34 => 
  array (
    'symbol' => 'function',
    'len' => 4,
    'replace' => true,
  ),
  35 => 
  array (
    'symbol' => 'function',
    'len' => 6,
    'replace' => true,
  ),
  36 => 
  array (
    'symbol' => 'order',
    'len' => 1,
    'replace' => true,
  ),
  37 => 
  array (
    'symbol' => 'order',
    'len' => 1,
    'replace' => true,
  ),
  38 => 
  array (
    'symbol' => 'argument',
    'len' => 1,
    'replace' => true,
  ),
  39 => 
  array (
    'symbol' => 'argument',
    'len' => 1,
    'replace' => true,
  ),
  40 => 
  array (
    'symbol' => 'argument',
    'len' => 1,
    'replace' => true,
  ),
  41 => 
  array (
    'symbol' => 'argument',
    'len' => 1,
    'replace' => true,
  ),
  42 => 
  array (
    'symbol' => 'link',
    'len' => 5,
    'replace' => true,
  ),
  43 => 
  array (
    'symbol' => 'format',
    'len' => 1,
    'replace' => true,
  ),
  44 => 
  array (
    'symbol' => 'calc',
    'len' => 1,
    'replace' => true,
  ),
  45 => 
  array (
    'symbol' => 'calc',
    'len' => 3,
    'replace' => true,
  ),
  46 => 
  array (
    'symbol' => 'calc',
    'len' => 3,
    'replace' => true,
  ),
  47 => 
  array (
    'symbol' => 'calc',
    'len' => 3,
    'replace' => true,
  ),
  48 => 
  array (
    'symbol' => 'calc',
    'len' => 3,
    'replace' => true,
  ),
  49 => 
  array (
    'symbol' => 'calc',
    'len' => 3,
    'replace' => true,
  ),
  50 => 
  array (
    'symbol' => 'calc',
    'len' => 3,
    'replace' => true,
  ),
  51 => 
  array (
    'symbol' => '\'start\'',
    'len' => 1,
    'replace' => true,
  ),
);
}
